// Initialize scene, camera, and renderer
const scene = new THREE.Scene();
const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
const renderer = new THREE.WebGLRenderer();
renderer.setSize(window.innerWidth, window.innerHeight);
document.body.appendChild(renderer.domElement);

// Create a cube
const geometry = new THREE.BoxGeometry();
const material = new THREE.MeshBasicMaterial({ color: 0x5f2fbd });
const cube = new THREE.Mesh(geometry, material);

const edges = new THREE.EdgesGeometry(geometry);
const edgesMaterial = new THREE.LineBasicMaterial({ color: 0xffffff }); 

const edgesMesh = new THREE.LineSegments(edges, edgesMaterial);
cube.add(edgesMesh); // Add edges mesh as a child of the cube

scene.add(cube);

// Position the cube in the middle of the scene
cube.position.set(0, 0, 0);

// Set camera position
camera.position.z = 5;

let moveCubeResponse = [2,0,2,1,1,2,2,1,2,2,0,2,2,0,2,1,0,0,2,2,2,2,2,2,1,0,2,1,0,2,1,2,0,1,1,0,0,2,2,0,2,2,0,1,2,2,0,0,2,0,2,0,2,2,0,2,1,0,0,1,0,0,0,0,1,0,2,0,0,2,2,0,1,2,0,2,0,1,0,2,1,1,0,1,0,2,2,0,0,0,2,1,0,2,0,1,1,2,0,2,2,0,1,2,0,2,2,2,0,1,2,2,1,2,2,2,2,1,0,2,2,1,1,1,0,2,0,1,0,2,2,0,2,0,2,2,0,2,2,2,2,2,2,2,2,2,1,2,2,0,2,2,2,2,1,1,2,1,0,2,0,2,0,2,0,0,1,0,0,2,1,2,1,2,2,0,1,1,2,1,0,2,2,2,2,0,1,2,2,1,2,1,0,2,0,0,2,1,1,2,0,0,2,0,0,2,2,1,2,1,0,0,0,1,2,2,0,2,2,2,0,2,1,0,2,0,0,2,1,1,2,1,2,2,2,0,2,2,0,2,2,2,2,2,2,0,0,2,2,0,0,1,2,0,2,0,2,1,2,0,2,2,0,0,1,1,2,2,2,1,1,0,2,2,2,0,0,0,0,0,1,2,2,2,0,2,2,0,0,2,0,2,1,0,2,2,0,0,1,0,2,0,2,0,0,2,2,2,2,0,2,0,0,2,2,0,2,2,2,0,1,0,2,1,0,0,1,2,2,0,1,2,0,1,2,2,0,1,0,2,2,2,0,0,0,1,0,0,2,1,2,1,1,1,2,1,2,2,2,2,2,0,2,1,2,0,0,0,0,0,1,2,2,2,1,0,0,1,0,2,0,0,0,2,2,2,2,2,0,0,2,0,2,0,2,2,0,1,1,2,2,0,2,2,2,2,0,2,0,0,2,2,1,0,2,0,2,0,0,2,0,2,0,0,2,0,2,2,0,2,1,2,2,2,2,0,0,0,2,2,0,0,2,0,1,2,1,2,2,0,2,1,2,1,2,2,0,2,2,2,2,2,0,2,0,2,0,2,2,2,2,1,1,1,0,1,2,0,2,2,0,2,0,0,2,1,2,2,2,1,2,2,1,2,2,2,2,0,0,0,1,0,2,2,0,0,1,0,0,0,2,1,2,2,2,0,1,0,0,0,2,0,0,2,2,0,0,2,2,2,1,1,1,2,0,2,1,0,1,2,2,0,2,0,0,0,0,1,2,0,1,0,2,2,1,2,0,1,2,0,0,1,2,2,2,0,1,1,2,2,0,2,0,1,0,2,1,2,0,2,0,2,2,2,2,2,0,2,2,2,0,2,2,0,0,2,2,0,0,2,2,0,0,0,2,2,2,0,1,0,1,2,2,0,0,0,2,1,0,2,0,1,2,0,2,0,0,2,2,2,2,0,0,0,1,0,2,2,2,1,2,2,0,0,2,2,2,1,1,2,2,0,0,0,2,0,2,2,2,1,0,0,0,0,1,1,0,2,0,0,2,2,1,0,0,0,2,2,2,0,2,2,2,1,1,2,2,2,2,0,2,2,0,2,0,0,0,2,2,2,2,2,0,1,2,2,2,0,2,0,2,2,2,0,2,1,0,1,0,2,2,2,1,1,1,2,0,0,2,0,1,2,0,1,2,0,2,1,2,0,2,2,0,2,2,2,2,0,2,1,0,2,0,0,1,2,1,2,1,0,2,2,2,0,0,0,2,0,0,2,2,1,2,1,2,2,2,2,1,1,0,2,0,0,1,0,2,2,0,2,0,2,2,2,0,0,2,1,1,0,1,2,1,0,0,0,2,2,1,0,0,0,2,0,0,0,2,1,2,2,2,2,2,1,2,0,0,2,0,0,0,1,2,2,0,1,0,0,2,0,2,0,0,0,2,2,2,1,0,0,0,2,0,0,2,2,0,0,2,2,2,2,2,0,0,0,1,0,0,0,1,2,0,2,0,0,1,1,1,0,0,2,1,1,1,2,0,2,2,2,2,0,1,1,2,1,0,0,0,2,0,1,1,2,0,2,0,2,2,1,2,2,0,0,0,1,2,2,0,2,0,2,0,0,0,2,2,1,0,1,0,2,0,2,2,2,0,2,1,2,1,1,1,0,2,2,1,1,1,2,0,2,2,0,0,2,0,2,0,0,0,1,0,1,0,0,0,2,0,2,0,2,2,0,1,0,1,0,1,0,2,2,0,2,2,1,0,2,2,2,0,1,2,0,2,2,0,2,2,2,1,0,0,0,2,2,1,0,2,0,2,1,0,0,1,0,1,0,2,2,2,2,2,0,2,2,2,2,0,1,0,2,2,2,2,0,0,0,0,0,2,0,1,2,2,2,0,0,2,2,1,2,2,0,2,2,1,0,1,2,0,0,0,0,2,2,0,2,0,2,2,0,1,2,2,2,1,0,0,0,2,2,2,0,0,0,2,2,0,2,2,1,1,2,0,2,1,2,1,2,2,0,0,2,1,1,2,2,2,1,0,0,2,0,2,1,0,2,0,0,0,0,0,0,1,0,0,0,2,2,2,2,0,1,1,2,0,2,0,1,0,2,2,0,0,0,0,0,0,2,2,2,2,0,0,2,2,2,2,2,0,0,2,1,2,2,2,0,0,2,2,1,0,1,1,1,2,0,2,0,2,0,1,0,1,0,1,2,2,1,0,0,0,0,1,2,2,0,2,0,2,2,2,0,2,2,2,1,0,2,2,0,1,1,1,0,0,2,2,2,1,1,2,0,2,0,2,2,1,2,2,1,1,0,1,2,1,2,0,0,0,0,0,1,0,2,2,1,0,0,1,1,1,0,1,0,2,0,0,2,2,1,1,2,2,1,1,0,1,1,1,2,0,2,2,2,2,1,1,0,0,0,1,0,0,0,2,2,0,2,1,0,1,2,1,2,2,2,0,1,2,2,1,0,1,0,1,0,0,0,1,2,0,0,0,1,1,2,0,1,2,0,2,2,2,0,0,0,0,1,2,0,2,0,1,2,2,2,0,0,1,2,2,2,1,2,2,0,2,0,1,0,0,2,1,0,0,2,0,2,2,2,2,1,0,2,1,2,2,0,1,2,0,2,2,1,0,0,0,0,0,2,1,2,1,1,2,2,0,2,2,1,2,2,0,2,2,0,1,2,2,2,2,2,2,0,2,0,1,2,0,2,2,1,0,2,2,1,2,2,1,2,0,1,2,0,1,1,2,2,0,0,2,0,0,0,2,1,2,1,2,2,2,0,1,0,0,2,2,0,2,0,0,0,0,2,2,2,0,0,1,1,2,0,2,0,1,2,0,0,0,0,2,2,2,2,0,2,1,2,2,2,1,1,2,2,2,1,2,0,0,2,0,0,0,2,2,1,0,2,2,1,2,2,2,0,2,1,1,2,2,2,1,2,2,2,1,2,0,2,0,1,0,0,2,0,2,2,0,0,2,2,2,2,0,2,2,0,0,2,1,1,2,2,2,0,0,0,1,1,0,2,0,1,2,2,2,1,2,2,1,2,2,0,1,2,2,1,2,0,2,1,2,1,0,2,2,0,2,2,1,1,0,2,0,2,2,2,2,1,0,2,1,2,2,2,2,1,1,2,2,0,0,2,2,2,2,2,1,2,2,2,0,1,2,1,0,0,0,2,1,2,0,0,1,2,2,2,0,2,1,0,2,2,2,2,2,2,0,1,1,1,1,0,0,0,0,2,2,1,0,0,0,2,1,0,0,1,2,2,1,0,2,2,2,0,0,0,2,2,0,1,0,0,0,1,0,0,1,1,2,1,0,0,1,2,2,2,0,0,0,2,0,0,0,2,0,2,2,1,2,2,2,2,0,2,0,2,0,0,0,0,0,2,2,2,2,2,2,1,2,1,2,2,2,0,0,0,2,2,2,2,0,2,1,2,2,1,2,1,0,2,0,1,2,2,1,1,2,2,1,2,1,0,1,1,0,0,2,2,2,0,2,2,2,2,2,0,0,0,0,2,0,0,2,2,2,0,2,0,2,0,2,1,1,1,2,0,2,1,0,2,0,0,2,1,1,0,2,1,1,0,0,1,0,2,0,0,2,2,2,0,2,0,1,1,2,2,0,0,1,2,2,1,0,2,2,2,2,2,2,2,2,0,2,2,1,2,0,1,2,2,0,1,0,1,0,1,0,2,2,0,2,2,2,1,0,2,0,1,0,2,1,2,0,2,2,2,1,1,2,0,0,2,0,2,2,2,2,2,2,0,0,1,2,2,2,0,2,0,0,1,0,2,2,2,1,0,0,1,2,2,0,0,2,1,2,2,0,0,2,0,0,2,1,1,1,2,1,0,0,1,0,2,0,2,0,1,2,0,0,0,0,2,2,0,1,0,1,0,2,1,2,0,2,2,2,0,2,0,2,2,2,0,0,1,0,0,2,2,0,1,0,1,2,0,2,0,0,1,2,0,0,0,0,0,0,2,2,0,2,2,2,0,2,2,2,2,0,0,1,2,2,0,0,1,2,2,0,2,1,0,1,2,2,2,0,2,1,2,2,2,2,2,0,2,0,2,2,1,0,0,1,0,2,1,2,1,1,0,2,1,1,2,2,2,0,2,0,0,1,0,0,1,0,0,2,2,2,0,0,0,2,2,2,1,0,0,0,0,2,2,2,0,1,1,2,2,1,2,0,2,1,0,1,2,0,1,2,2,1,2,2,1,0,0,2,0,2,1,2,1,2,2,2,0,2,0,1,2,2,2,0,2,2,0,0,1,0,2,0,0,2,1,2,2,0,0,0,2,2,2,2,2,0,1,1,2,2,2,2,2,1,0,0,2,2,2,2,2,0,1,0,1,0,2,2,2,2,0,1,1,0,2,0,0,2,2,1,2,0,2,0,1,2,2,1,0,1,2,2,2,2,0,1,0,0,0,0,1,0,0,2,0,0,1,0,2,2,2,0,0,0,0,2,0,0,1,2,0,2,2,2,2,2,2,2,2,0,1,2,1,1,0,0,2,2,2,0,0,0,2,2,2,0,2,2,1,0,0,0,1,2,0,0,2,2,0,0,2,2,0,2,2,0,2,1,2,2,0,2,0,2,2,0,2,0,1,0,0,2,2,2,2,0,2,0,2,2,2,1,2,2,2,2,0,2,2,1,0,0,2,1,0,2,2,2,0,1,0,2,0,0,0,1,2,0,2,2,2,0,0,2,0,0,2,2,0,2,2,0,2,1,1,2,0,1,2,1,2,1,2,0,2,2,1,1,2,0,1,0,0,1,2,0,1,0,2,1,2,2,2,2,0,1,0,0,2,2,2,2,0,0,2,2,2,0,2,1,2,0,0,2,2,1,0,0,2,1,0,1,0,2,2,2,0,2,0,2,2,1,1,2,0,2,0,1,0,1,0,1,2,2,2,2,1,0,1,2,2,2,2,0,0,2,0,0,2,0,2,2,2,2,2,1,0,0,0,1,0,1,2,0,2,0,2,0,0,2,1,2,2,0,2,0,1,0,2,0,2,2,0,1,1,0,0,2,2,2,2,1,2,0,0,0,2,0,2,1,0,0,2,0,0,2,1,2,2,0,0,2,2,0,0,0,0,0,0,2,0,2,1,2,0,0,2,0,0,0,0,2,0,2,2,0,0,1,1,0,1,2,1,0,2,1,0,2,2,2,0,2,2,0,1,0,2,1,2,2,2,1,1,2,2,2,0,0,2,2,0,1,0,2,2,0,2,2,1,0,2,0,0,1,2,1,0,0,2,1,2,0,0,2,2,0,0,1,2,2,2,0,2,1,0,0,2,1,0,2,0,0,2,0,0,0,0,2,2,1,1,2,2,0,0,2,2,1,1,0,1,1,2,0,1,1,2,2,2,1,0,0,2,0,0,2,2,0,2,2,1,0,2,0,2,2,2,2,2,0,2,2,2,0,2,2,2,2,0,1,0,0,1,2,1,0,2,1,2,2,0,2,1,1,2,0,2,2,2,0,0,1,1,0,2,0,1,2,2,2,0,0,2,0,0,0,2,0,2,0,1,2,2,2,2,2,2,2,0,2,2,2,1,0,1,0,2,2,2,2,2,2,1,2,2,0,1,2,2,2,2,2,0,2,0,1,1,0,0,0,2,2,0,2,2,2,0,2,2,2,0,0,2,1,2,0,2,0,2,0,2,1,2,1,1,0,0,2,1,0,1,0,0,1,1,1,1,0,0,2,0,2,0,0,1,0,2,1,2,0,2,2,2,1,2,0,0,2,1,0,1,2,2,2,2,0,2,1,2,2,0,2,2,2,2,0,0,0,2,2,0,2,0,2,0,2,2,0,1,2,2,1,1,2,2,1,1,0,0,2,0,2,2,0,2,0,1,2,1,2,2,0,2,2,1,2,2,0,0,0,2,2,0,0,1,2,1,2,0,2,0,2,1,2,0,0,0,0,0,2,1,1,1,2,2,0,1,1,0,2,2,2,2,0,2,2,0,0,2,0,2,0,2,1,0,2,2,0,2,2,0,2,2,2,2,0,1,1,2,2,2,0,0,2,2,1,1,2,2,1,0,1,2,0,0,0,0,2,0,0,1,2,2,1,1,0,2,0,0,2,0,0,0,2,0,0,2,0,0,2,2,1,2,0,2,1,1,2,2,0,2,0,2,1,1,2,0,2,2,2,0,0,2,0,2,0,0,0,0,1,2,2,1,0,1,0,2,0,2,0,0,1,0,0,0,2,1,0,1,0,2,1,1,0,0,2,1,1,2,0,2,0,1,2,1,2,2,2,1,0,0,0,0,0,0,0,0,2,2,0,0,2,0,2,2,1,2,2,0,2,0,2,0,2,2,1,2,1,1,0,0,0,0,0,0,2,0,0,0,2,1,2,0,0,2,1,0,0,2,2,1,2,0,2,2,2,1,2,2,2,2,0,1,0,1,2,0,0,0,2,2,2,0,2,0,1,2,1,2,0,2,1,0,0,1,2,1,2,0,2,1,1,2,1,2,1,0,0,2,0,1,2,0,0,2,0,1,2,1,0,0,0,1,0,0,0,0,2,2,0,1,2,0,2,2,2,0,2,0,2,2,2,1,0,2,1,0,2,1,1,0,2,1,2,2,0,0,0,1,1,0,2,0,2,0,0,0,2,2,2,0,0,1,2,0,2,2,2,0,0,0,0,2,2,1,2,0,1,0,0,2,0,2,0,1,1,1,2,1,1,2,1,1,1,0,1,2,1,2,2,1,2,0,2,1,2,1,0,2,2,0,2,0,2,1,2,2,0,0,2,1,1,2,2,2,2,0,0,1,0,1,0,2,2,2,2,2,2,2,1,0,0,2,2,0,0,2,0,2,2,0,0,2,1,2,0,0,1,0,2,0,0,0,2,0,1,0,0,0,1,2,1,0,2,0,2,0,2,0,2,0,2,2,0,2,2,2,1,2,1,2,0,2,0,2,0,2,2,0,2,1,0,2,0,0,2,0,2,0,0,0,2,2,0,2,2,2,1,0,0,0,2,0,1,1,2,2,2,1,0,2,1,1,0,2,1,0,1,2,0,2,2,2,2,1,0,0,2,2,2,0,2,0,0,1,0,0,0,0,0,1,1,0,0,2,2,2,1,2,1,1,2,2,2,1,0,1,1,2,2,0,1,0,0,0,2,1,0,1,1,2,1,0,1,1,1,0,2,2,1,0,0,1,1,2,1,2,2,0,2,2,1,0,2,2,0,0,2,1,0,2,2,0,0,1,2,2,0,2,2,0,1,2,1,0,0,2,2,1,2,0,1,1,2,2,2,1,2,0,0,2,2,1,0,0,0,2,2,2,2,0,1,0,2,0,2,0,0,0,2,2,2,0,0,2,1,0,0,2,1,2,0,1,2,2,0,1,2,0,2,0,0,1,1,2,0,0,1,1,0,0,2,0,1,1,2,1,1,1,2,0,2,2,2,2,2,0,2,2,2,1,1,2,0,0,0,1,1,2,0,0,0,2,2,0,1,0,2,1,1,1,2,2,2,0,0,2,2,1,1,2,0,0,0,2,2,0,0,2,2,0,2,1,0,1,0,1,1,2,2,1,0,2,0,1,2,0,0,0,0,0,0,2,0,2,0,0,1,0,2,1,0,1,1,0,0,0,2,2,2,2,2,2,2,2,1,2,2,2,1,0,0,0,0,1,1,2,0,0,2,1,2,1,2,2,1,1,0,2,0,1,2,2,0,2,2,2,1,2,1,2,1,2,2,1,2,1,1,0,0,0,1,0,0,0,0,0,0,2,1,0,2,2,2,2,2,0,2,1,2,2,0,0,2,2,1,0,2,1,0,2,2,2,2,1,0,2,2,0,0,2,0,0,2,0,2,0,2,0,2,2,0,1,0,2,2,0,2,1,0,2,1,2,1,1,0,0,0,1,0,1,0,0,0,0,2,0,1,0,1,2,0,2,1,2,1,2,0,0,0,1,0,2,0,2,0,1,2,1,2,1,2,2,0,0,0,0,2,1,1,0,2,2,1,0,0,2,2,2,1,1,2,2,1,2,2,2,1,0,0,2,2,0,0,0,2,0,0,0,2,0,0,0,0,1,2,0,1,0,2,0,2,0,2,1,1,0,2,1,2,2,1,0,0,2,2,1,1,2,0,1,0,2,1,2,2,1,0,2,2,2,2,2,0,2,0,2,0,1,0,1,2,2,1,1,1,0,1,0,1,0,2,1,0,0,0,2,2,2,2,2,1,1,0,2,0,1,0,2,2,0,0,1,2,0,2,0,2,2,2,2,0,0,2,2,2,2,0,2,2,0,0,0,0,2,0,1,2,2,2,0,1,2,0,2,2,2,2,2,0,0,2,2,2,0,1,1,1,2,1,0,0,0,1,2,2,1,2,2,0,0,2,0,1,2,0,1,0,2,0,2,2,0,0,2,2,2,1,0,2,2,0,1,1,1,0,0,0,0,0,2,2,0,1,2,1,1,0,0,2,2,1,2,2,2,1,0,2,0,0,0,2,0,0,0,0,0,0,1,0,0,2,2,0,1,0,2,2,1,0,2,1,2,1,0,2,0,0,1,2,0,0,0,0,2,0,0,0,0,1,0,1,1,2,2,0,0,2,2,1,1,2,2,2,1,1,1,2,2,0,0,0,1,2,2,2,2,0,2,0,2,2,2,0,1,0,0,1,0,2,1,0,0,0,0,2,2,0,0,2,0,2,2,2,2,0,2,1,2,0,1,2,0,0,2,2,2,2,2,0,2,2,2,0,0,0,2,0,0,0,0,0,1,0,2,1,1,0,2,1,0,2,1,0,2,2,0,2,2,0,0,1,0,0,0,2,0,1,2,0,0,0,2,2,2,2,2,2,0,0,2,2,0,0,0,1,1,0,0,0,2,0,1,0,1,0,0,1,0,1,0,0,0,0,0,2,2,0,1,2,0,2,0,0,0,1,1,2,1,0,2,2,0,0,2,2,2,2,0,2,2,0,2,0,2,2,2,2,2,2,2,2,0,2,2,2,0,0,1,0,2,2,0,0,0,2,1,0,0,2,0,2,2,2,0,1,2,2,0,2,0,2,2,2,0,2,2,2,0,2,1,2,0,2,1,0,2,2,0,2,1,2,2,2,2,0,2,2,2,0,2,1,2,0,2,2,0,1,2,0,0,0,0,2,0,0,0,0,2,1,0,0,2,2,2,2,0,2,2,0,1,1,1,2,2,1,0,2,2,2,2,0,0,0,0,2,0,0,2,2,2,2,0,2,0,0,2,1,2,2,2,2,2,1,2,0,2,2,0,0,0,0,0,2,0,2,2,1,0,0,2,2,2,2,1,1,0,0,1,2,0,2,2,2,2,1,1,1,0,2,0,0,2,2,1,2,2,2,1,2,1,0,1,2,0,0,1,0,0,0,2,1,1,2,2,2,0,2,1,1,2,2,1,2,2,1,2,2,0,2,2,1,0,2,1,2,1,2,1,0,1,0,1,2,0,2,2,0,2,2,1,0,0,2,2,2,2,2,0,2,2,2,1,0,0,0,1,1,2,2,0,1,0,0,1,2,0,0,0,0,2,2,0,2,0,0,2,2,2,2,2,1,1,2,0,0,0,1,2,0,0,1,0,2,0,0,0,0,2,1,1,2,1,0,2,0,0,0,0,0,0,0,0,0,2,2,2,0,0,2,0,0,0,1,1,2,1,0,2,2,2,2,1,1,1,1,2,1,0,1,0,0,2,1,2,1,2,2,1,2,2,2,0,2,0,2,0,2,2,1,1,1,2,2,2,0,2,2,0,2,1,0,0,2,2,0,1,0,2,1,1,2,0,0,1,2,2,2,0,1,2,0,0,1,1,1,0,2,0,0,0,0,1,2,2,2,0,1,2,2,2,2,2,2,2,2,0,0,2,2,2,0,2,0,1,2,0,2,2,0,2,0,1,1,0,1,0,1,0,2,1,2,2,0,0,2,0,1,0,1,1,2,2,2,2,2,0,2,2,1,0,2,2,1,2,0,2,0,2,2,2,0,0,1,0,2,0,0,0,1,2,0,2,2,1,0,2,1,0,2,2,0,0,1,0,2,0,2,2,0,0,2,0,1,1,0,2,2,0,0,2,0,0,1,2,0,2,0,0,1,0,2,2,0,0,0,0,2,2,0,2,2,2,1,2,2,2,0,2,0,0,2,0,2,1,2,2,2,0,2,0,0,2,2,0,1,1,1,1,2,2,1,0,0,0,1,1,2,2,1,2,2,0,1,2,2,2,2,1,0,0,0,2,2,0,1,2,2,0,2,2,2,2,1,1,2,2,2,0,2,1,0,1,2,2,0,2,0,2,2,0,0,2,2,0,1,1,0,2,2,1,1,1,0,0,1,2,2,0,2,2,1,2,2,2,1,2,0,0,0,2,0,0,2,0,0,2,2,0,0,2,0,2,0,0,2,0,2,0,1,2,0,2,0,2,0,1,2,1,1,1,2,2,1,0,0,2,0,0,0,2,2,2,0,2,0,1,2,2,1,1,2,2,0,2,2,0,1,2,0,2,2,0,2,0,0,0,1,1,0,1,0,2,0,0,0,2,2,2,0,0,2,1,0,2,1,2,2,0,1,2,0,2,2,1,0,1,1,1,0,0,1,2,2,2,2,2,1,1,1,2,1,0,2,1,0,0,0,0,0,2,1,0,1,1,0,0,0,0,2,1,1,1,2,2,2,0,2,2,2,2,2,0,1,0,2,0,1,2,2,0,0,0,0,2,0,1,0,2,2,1,1,2,2,0,2,2,1,1,2,2,2,0,0,1,2,2,1,2,0,2];

let movementIndex = 0;

// Animation loop
function animate() {
    requestAnimationFrame(animate);

    //moveCube();
    updateCubePosition(); 
    renderer.render(scene, camera);
    
}
function updateCubePosition(){
    if (moveCubeResponse[movementIndex] == 2){
        cube.position.x += 0.01;// Mover a la derecha
    }
    if (moveCubeResponse[movementIndex] == 0){
        cube.position.x -= 0.01; // Mover a la izquierda
    }


    movementIndex = (movementIndex + 1) %moveCubeResponse.length;
}
function moveCube() {
    // Create an AbortController instance
    const controller = new AbortController();
    const signal = controller.signal;

    // Set the timeout duration in milliseconds
    const timeoutDuration = 10000; // Example: 5 seconds

    // Set a timeout for the fetch request
    const timeoutId = setTimeout(() => {
        // Abort the fetch request if it exceeds the timeout
        controller.abort();
        console.error('Fetch request timed out');
    }, timeoutDuration);

    fetch('https://api-flask-tesina-2745b2978945.herokuapp.com/modelSVM', { signal })
    .then(response => response.json())
    .then(data => {
        // Clear the timeout if the fetch request succeeds before timeout
        clearTimeout(timeoutId);

        // guardar los datos de la respuesta en una variable
        moveCubeResponse = data;
    })
    .catch(error => {
        // Clear the timeout if the fetch request fails
        clearTimeout(timeoutId);

        console.error('Error al obtener los datos:', error);
    });
}

animate();